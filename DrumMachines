(
SynthDef(\drum_kick, {
			arg freq=440, gate=1, amp=0.8, source,pan = 0.0 ;
			source = 
			Pan2.ar(
			SinOsc.ar(EnvGen.kr(Env.perc(0.0001, 1.5, 1, -200), gate, 1000, 45, doneAction:2), 1, 1) +
			((BPF.ar([GrayNoise.ar(6),GrayNoise.ar(6)],EnvGen.kr(Env.perc(0.001, 0.3, 1, -200), gate, 6000, 70), 1.5)).distort * Line.kr(0.3,0,0.1))
			* 
			EnvGen.kr(Env.perc(0.0001, 0.09, amp, 8)),0);
			Out.ar(0, source);
		}).add; Â 


SynthDef(\chord_bass,{
	arg amp=0.5, sustain=0.1, freq=90, filtfreq1 = 7000, filtfreq2=1000, releaseTime = 0.5, reverb = 0.1,rq=0.99;
	var env, sound;
	env=EnvGen.ar(Env.perc(releaseTime:releaseTime),doneAction:2);
	sound=FreeVerb.ar(RLPF.ar(LFSaw.ar(freq,0,amp),Line.kr(filtfreq1, filtfreq2,0.1),rq), reverb, 0.2, 0.5);
	Out.ar(0,Pan2.ar(sound*env, 0.0))
}).add;


SynthDef(\my_bass,{
	arg amp=1, sustain=0.3, freq=90, filtfreq1 = 7000, filtfreq2=1000, releaseTime = 0.5, reverb = 0.3, rq=0.99;
	var env, sound;
	env=EnvGen.ar(Env.perc(releaseTime:releaseTime),doneAction:2);
	sound=FreeVerb.ar(RLPF.ar(LFTri.ar(freq,0,amp*2),Line.kr(filtfreq1, filtfreq2,0.1),rq) ,reverb, 0.2 ,0.5);
	Out.ar(0,Pan2.ar(sound*env, 0.0))
}).add;



SynthDef(\SOSsnare,
// recipe basically from Gordon Reid
// http://www.soundonsound.com/sos/Mar02/articles/synthsecrets0302.asp
// programmed by Renick Bell, renick_at_gmail.com
	{arg out = 0, decay = 0.12, drum_mode_level = 0.25,
	snare_level = 40, snare_tightness = 3000,
	freq = 405, amp = 0.8;
	var drum_mode_sin_1, drum_mode_sin_2, drum_mode_pmosc, drum_mode_mix,
drum_mode_env;
	var snare_noise, snare_brf_1, snare_brf_2, snare_brf_3, snare_brf_4,
snare_reson;
	var snare_env;
	var snare_drum_mix;

	drum_mode_env = EnvGen.ar(Env.perc(0.005, decay), 1.0, doneAction: 2);
	drum_mode_sin_1 = SinOsc.ar(freq*0.53, 0, drum_mode_env * 0.5);
	drum_mode_sin_2 = SinOsc.ar(freq, 0, drum_mode_env * 0.5);
	drum_mode_pmosc = PMOsc.ar(	Saw.ar(freq*0.85),
					184,
					0.5/1.3,
					mul: drum_mode_env*5,
					add: 0);
	drum_mode_mix = Mix.new([drum_mode_sin_1, drum_mode_sin_2,
drum_mode_pmosc]) * drum_mode_level;

// choose either noise source below
//	snare_noise = Crackle.ar(2.01, 1);
	snare_noise = LFNoise0.ar(20000, 0.1);
	snare_env = EnvGen.ar(Env.perc(0.005, decay, curve:-5), 1.0, doneAction: 2);
	snare_brf_1 = BRF.ar(in: snare_noise, freq: 8000, mul: 0.5, rq: 0.1);
	snare_brf_2 = BRF.ar(in: snare_brf_1, freq: 5000, mul: 0.5, rq: 0.1);
	snare_brf_3 = BRF.ar(in: snare_brf_2, freq: 3600, mul: 0.5, rq: 0.1);
	snare_brf_4 = BRF.ar(in: snare_brf_3, freq: 2000, mul: snare_env, rq: 0.0001);
	snare_reson = Resonz.ar(snare_brf_4, snare_tightness, mul: snare_level) ;
	snare_drum_mix = Mix.new([drum_mode_mix, snare_reson]) * 5 * amp;
	Out.ar(out, [snare_drum_mix, snare_drum_mix])
	}
).add;

SynthDef('closedhat', {

	var hatosc, hatenv, hatnoise, hatoutput;

	hatnoise = {LPF.ar(WhiteNoise.ar(1),8000)};

	hatosc = {HPF.ar(hatnoise,2400)};
	hatenv = {Line.ar(1, 0, 0.1)};

	hatoutput = (0.5 * hatosc * hatenv);

	Out.ar(0,
		Pan2.ar(hatoutput, 0)
	);

}).add;


)